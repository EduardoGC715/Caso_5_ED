#pragma once
#include <iostream>
#include <fstream>
#include <windows.h>

void show_html(LPCTSTR path){
    ShellExecute(NULL, "open", path, NULL, NULL, SW_SHOWNORMAL);
}

void create_html(){
    const char *path="..\\Output\\test.html";
    std::ofstream graph_GUI(path); //open in constructor
    string html_file;

    html_file="<!DOCTYPE html>\n"
                        "<meta charset=\"utf-8\" />\n"
                        "<style>\n"
                        " .links line {\n"
                        "  stroke: #999;\n"
                        "  stroke-opacity: 0.6;\n"
                        " }\n"
                        "\n"
                        " .nodes circle {\n"
                        "  stroke: #fff;\n"
                        "  stroke-width: 1.5px;\n"
                        " }\n"
                        "</style>\n"
                        "<svg width=\"960\" height=\"600\"></svg>\n"
                        "<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n"
                        "<script>\n"
                        " //initilize svg or grab svg\n"
                        " var svg = d3.select(\"svg\");\n"
                        " var width = svg.attr(\"width\");\n"
                        " var height = svg.attr(\"height\");\n"
                        "\n"
                        " //intialize data\n"
                        " var graph = {\n"
                        "  nodes: [\n";
    html_file+="   { name: \"Alice\" ,offer:\"blahblahblah\",demand:\"sisisisissisiis\"},\n"
               "   { name: \"Bob\" ,offer:\"blahblahblah\",demand:\"sisisisissisiis\"},\n"
               "   { name: \"Chen\" ,offer:\"blahblahblah\",demand:\"sisisisissisiis\"},\n"
               "   { name: \"Dawg\" ,offer:\"blahblahblah\",demand:\"sisisisissisiis\"},\n"
               "   { name: \"Ethan\" ,offer:\"blahblahblah\",demand:\"sisisisissisiis\"},\n"
               "   { name: \"George\" ,offer:\"blahblahblah\",demand:\"sisisisissisiis\"},\n"
               "   { name: \"Frank\" ,offer:\"blahblahblah\",demand:\"sisisisissisiis\"},\n"
               "   { name: \"Hanes\" ,offer:\"blahblahblah\",demand:\"sisisisissisiis\"}\n"
               "  ],\n"
               "  links: [\n"
               "   { source: \"Alice\", target: \"Bob\" },\n"
               "   { source: \"Chen\", target: \"Bob\" },\n"
               "   { source: \"Dawg\", target: \"Chen\" },\n"
               "   { source: \"Hanes\", target: \"Frank\" },\n"
               "   { source: \"Hanes\", target: \"George\" },\n"
               "   { source: \"Dawg\", target: \"Ethan\" }\n"
               "  ]\n"
               " };\n";

    html_file+="var simulation = d3\n"
               "         .forceSimulation(graph.nodes)\n"
               "         .force(\n"
               "                 \"link\",\n"
               "                 d3\n"
               "                         .forceLink()\n"
               "                         .id(function(d) {\n"
               "                          return d.name;\n"
               "                         })\n"
               "                         .links(graph.links)\n"
               "         )\n"
               "\n"
               "         .force(\"charge\", d3.forceManyBody().strength(-30))\n"
               "         .force(\"center\", d3.forceCenter(width / 2, height / 2))\n"
               "         .on(\"tick\", ticked);\n"
               "\n"
               " var link = svg\n"
               "         .append(\"g\")\n"
               "         .attr(\"class\", \"links\")\n"
               "         .selectAll(\"line\")\n"
               "         .data(graph.links)\n"
               "         .enter()\n"
               "         .append(\"line\")\n"
               "         .attr(\"stroke-width\", function(d) {\n"
               "          return 3;\n"
               "         });\n"
               "\n"
               " var node = svg\n"
               "         .append(\"g\")\n"
               "         .attr(\"class\", \"nodes\")\n"
               "         .selectAll(\"circle\")\n"
               "         .data(graph.nodes)\n"
               "         .enter()\n"
               "         .append(\"circle\")\n"
               "         .attr(\"r\", 5)\n"
               "         .attr(\"fill\", function(d) {\n"
               "          return \"red\";\n"
               "         })\n"
               "         .call(\n"
               "                 d3\n"
               "                         .drag()\n"
               "                         .on(\"start\", dragstarted)\n"
               "                         .on(\"drag\", dragged)\n"
               "                         .on(\"end\", dragended)\n"
               "         );\n"
               "\n"
               " function ticked() {\n"
               "  link\n"
               "          .attr(\"x1\", function(d) {\n"
               "           return d.source.x;\n"
               "          })\n"
               "          .attr(\"y1\", function(d) {\n"
               "           return d.source.y;\n"
               "          })\n"
               "          .attr(\"x2\", function(d) {\n"
               "           return d.target.x;\n"
               "          })\n"
               "          .attr(\"y2\", function(d) {\n"
               "           return d.target.y;\n"
               "          });\n"
               "\n"
               "  node\n"
               "          .attr(\"cx\", function(d) {\n"
               "           return d.x;\n"
               "          })\n"
               "          .attr(\"cy\", function(d) {\n"
               "           return d.y;\n"
               "          });\n"
               " }\n"
               "\n"
               " function dragstarted(d) {\n"
               "  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n"
               "  d.fx = d.x;\n"
               "  d.fy = d.y;\n"
               "  console.log(d3.event.subject);\n"
               " }\n"
               "\n"
               " function dragged(d) {\n"
               "  d.fx = d3.event.x;\n"
               "  d.fy = d3.event.y;\n"
               " }\n"
               "\n"
               " function dragended(d) {\n"
               "  if (!d3.event.active) simulation.alphaTarget(0);\n"
               "  d.fx = null;\n"
               "  d.fy = null;\n"
               " }\n"
               "</script>";
    graph_GUI << html_file;
}
